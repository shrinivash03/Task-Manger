"use strict";(()=>{var e={};e.id=974,e.ids=[974],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9636:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>l,originalPathname:()=>m,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>k,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>_});var a={};r.r(a),r.d(a,{PATCH:()=>PATCH});var s=r(884),o=r(6132),i=r(5798),n=r(5599),u=r(3639);async function PATCH(e,{params:t}){try{await (0,n.Z)();let{completed:r}=await e.json(),a=await u.Z.findByIdAndUpdate(t.id,{completed:r},{new:!0});if(!a)return i.Z.json({error:"Task not found"},{status:404});return i.Z.json(a)}catch(e){return console.error("Error updating task:",e),i.Z.json({error:"Failed to update task"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/tasks/[id]/route",pathname:"/api/tasks/[id]",filename:"route",bundlePath:"app/api/tasks/[id]/route"},resolvedPagePath:"C:\\Users\\nivas\\Desktop\\Task manger\\app\\api\\tasks\\[id]\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:c,serverHooks:k,headerHooks:l,staticGenerationBailout:_}=d,m="/api/tasks/[id]/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[997,689],()=>__webpack_exec__(9636));module.exports=r})();